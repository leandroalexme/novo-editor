export declare const setTranslations: (json: any, { validate }?: {
    validate?: boolean;
}) => void;
export declare const getTranslations: () => {
    toolbar: {
        duration: string;
        opacity: string;
        effects: string;
        blur: string;
        textBackground: string;
        backgroundCornerRadius: string;
        backgroundOpacity: string;
        backgroundPadding: string;
        brightness: string;
        filters: string;
        sepia: string;
        grayscale: string;
        textStroke: string;
        shadow: string;
        border: string;
        cornerRadius: string;
        copyStyle: string;
        position: string;
        layering: string;
        toForward: string;
        up: string;
        down: string;
        toBottom: string;
        alignLeft: string;
        alignCenter: string;
        alignRight: string;
        alignTop: string;
        alignMiddle: string;
        alignBottom: string;
        flip: string;
        flipHorizontally: string;
        flipVertically: string;
        fitToBackground: string;
        removeBackground: string;
        removeBackgroundTitle: string;
        cancelRemoveBackground: string;
        confirmRemoveBackground: string;
        crop: string;
        cropDone: string;
        cropCancel: string;
        clip: string;
        removeClip: string;
        removeMask: string;
        transparency: string;
        lockedDescription: string;
        unlockedDescription: string;
        removeElements: string;
        duplicateElements: string;
        download: string;
        saveAsImage: string;
        saveAsPDF: string;
        lineHeight: string;
        letterSpacing: string;
        offsetX: string;
        offsetY: string;
        color: string;
        selectable: string;
        draggable: string;
        removable: string;
        resizable: string;
        contentEditable: string;
        styleEditable: string;
        alwaysOnTop: string;
        showInExport: string;
        ungroupElements: string;
        groupElements: string;
        lineSize: string;
        fade: string;
        move: string;
        zoom: string;
        animate: string;
        rotate: string;
        none: string;
        bounce: string;
        blink: string;
        strength: string;
        spaceEvenly: string;
        horizontalDistribution: string;
        verticalDistribution: string;
        strokeWidth: string;
        colorPicker: {
            solid: string;
            linear: string;
            angle: string;
        };
        aiText: {
            aiWrite: string;
            rewrite: string;
            shorten: string;
            continue: string;
            proofread: string;
            tones: string;
            friendly: string;
            professional: string;
            humorous: string;
            formal: string;
            customPrompt: string;
            generatedResult: string;
            cancel: string;
            generate: string;
            back: string;
            tryAgain: string;
            insert: string;
            promptPlaceholder: string;
        };
    };
    workspace: {
        noPages: string;
        addPage: string;
        removePage: string;
        duplicatePage: string;
        moveUp: string;
        moveDown: string;
    };
    scale: {
        reset: string;
    };
    error: {
        removeBackground: string;
    };
    sidePanel: {
        templates: string;
        searchTemplatesWithSameSize: string;
        searchPlaceholder: string;
        otherFormats: string;
        noResults: string;
        error: string;
        text: string;
        uploadFont: string;
        myFonts: string;
        photos: string;
        videos: string;
        animations: string;
        effects: string;
        elements: string;
        shapes: string;
        lines: string;
        upload: string;
        uploadImage: string;
        uploadTip: string;
        background: string;
        resize: string;
        layers: string;
        animate: string;
        layerTypes: {
            image: string;
            text: string;
            svg: string;
            line: string;
            figure: string;
            group: string;
        };
        layersTip: string;
        noLayers: string;
        namePlaceholder: string;
        useMagicResize: string;
        clipImage: string;
        width: string;
        height: string;
        magicResizeDescription: string;
        headerText: string;
        createHeader: string;
        subHeaderText: string;
        createSubHeader: string;
        bodyText: string;
        createBody: string;
    };
    pagesTimeline: {
        pages: string;
        removePage: string;
        addPage: string;
        duplicatePage: string;
        removeAudio: string;
    };
    contextMenu: {
        duplicate: string;
        remove: string;
        lock: string;
        unlock: string;
        copy: string;
        paste: string;
        copyStyle: string;
        moveUp: string;
        moveDown: string;
        moveBack: string;
        moveForward: string;
    };
};
export declare const t: (path: string) => string;
