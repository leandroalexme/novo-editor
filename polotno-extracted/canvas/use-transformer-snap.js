var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.setSnapFilterFunc=exports.setSnapGuideStyle=void 0,exports.useSnap=function(e,r,f){const u=t.default.useRef(null);(0,exports.setSnapGuideStyle)(f);const l=e=>e.hasName("element")||e.hasName("page-background")||!u.current&&e.hasName("elements-area");function c(t){var n;const o=null===(n=e.current)||void 0===n?void 0:n.getStage(),i=[],r=[];return o.find(l).forEach((e=>{if(!(t.indexOf(e)>=0)){var n=e.getClientRect({skipShadow:!0,skipStroke:!0});i.push({offset:n.x,node:e,snap:"start"},{offset:n.x+n.width,node:e,snap:"end"},{offset:n.x+n.width/2,node:e,snap:"center"}),r.push({offset:n.y,node:e,snap:"start"},{offset:n.y+n.height,node:e,snap:"end"},{offset:n.y+n.height/2,node:e,snap:"center"})}})),{vertical:i,horizontal:r}}function h(t){var o;const r=null===(o=e.current)||void 0===o?void 0:o.getLayer(),s=null==r?void 0:r.children.find((e=>"line-guides"===e.name()));t.forEach((e=>{if("H"===e.orientation){var t=new n.default.Line({x:-r.getStage().x(),y:-r.getStage().y(),points:[-6e3,e.lineGuide,6e3,e.lineGuide],stroke:i.stroke,strokeWidth:i.strokeWidth,name:"guid-line",dash:i.dash});null==s||s.add(t),r.batchDraw()}else{"V"===e.orientation&&(t=new n.default.Line({x:-r.getStage().x(),y:-r.getStage().y(),points:[e.lineGuide,-6e3,e.lineGuide,6e3],stroke:i.stroke,strokeWidth:i.strokeWidth,name:"guid-line",dash:i.dash}),null==s||s.add(t))}}))}const g=e=>{const t=e.target.getLayer().children.find((e=>"line-guides"===e.name()));null==t||t.destroyChildren();var i=c(e.target.nodes()),r=function(e){const t=e.__getNodeRect(),i=(0,o.getClientRect)(Object.assign(Object.assign({},t),{rotation:n.default.Util.radToDeg(t.rotation)})),r=e.getAbsolutePosition();return{vertical:[{guide:i.x,offset:r.x-i.x,snap:"start",nodes:e.nodes()},{guide:i.x+i.width/2,offset:r.x-i.x-i.width/2,snap:"center",nodes:e.nodes()},{guide:i.x+i.width,offset:r.x-i.x-i.width,snap:"end",nodes:e.nodes()}],horizontal:[{guide:i.y,offset:r.y-i.y,snap:"start",nodes:e.nodes()},{guide:i.y+i.height/2,offset:r.y-i.y-i.height/2,snap:"center",nodes:e.nodes()},{guide:i.y+i.height,offset:r.y-i.y-i.height,snap:"end",nodes:e.nodes()}]}}(e.target),a=s(i,r);if(!a.length){return}h(a);const d=e.target.getAbsolutePosition(),f=(e.target.nodes().map((e=>e.getAbsolutePosition())),Object.assign({},d));a.forEach((e=>{switch(e.snap){case"start":case"center":case"end":switch(e.orientation){case"V":f.x=e.lineGuide+e.offset;break;case"H":f.y=e.lineGuide+e.offset}}}));const u=f.x-d.x,l=f.y-d.y;e.evt.ctrlKey||e.evt.metaKey||e.target.nodes().forEach((e=>{const t=e.getAbsolutePosition();e.setAbsolutePosition({x:t.x+u,y:t.y+l})}))},p=(t,n,o)=>{var i;const r=e.current,f=r.getLayer().children.find((e=>"line-guides"===e.name()));if(null==f||f.destroyChildren(),"rotater"===r.getActiveAnchor()){return n}const u=r.getActiveAnchor(),l=d[u],g=null===(i=r.findOne(`.${l}`))||void 0===i?void 0:i.getAbsolutePosition();if(!g){return n}const p={x:t.x-g.x,y:t.y-g.y},y=function(e,t){const n=a(e,t)/a(t,t);return{x:n*t.x,y:n*t.y}}({x:n.x-t.x,y:n.y-t.y},p),x={x:t.x+y.x,y:t.y+y.y};var v=s(c(r.nodes()),{vertical:[{guide:x.x,offset:0,snap:"start",nodes:r.nodes()}],horizontal:[{guide:x.y,offset:0,snap:"start",nodes:r.nodes()}]});if(!v.length){return n}if(h(v),o.ctrlKey||o.metaKey){return n}const m=[];if(v.forEach((e=>{const t=function(e,t,n){if("V"===n.orientation){const o=n.lineGuide;if(Math.abs(t.x-e.x)<1e-4){return null}const i=(t.y-e.y)/(t.x-e.x);return{x:o,y:i*o+(e.y-i*e.x)}}{const o=n.lineGuide;if(Math.abs(t.y-e.y)<1e-4){return null}const i=(t.y-e.y)/(t.x-e.x);return{x:(o-e.y)/i+e.x,y:o}}}(x,g,{orientation:e.orientation,lineGuide:e.lineGuide});t&&m.push(t)})),m.length>0){let e=m[0],t=Math.sqrt(Math.pow(x.x-e.x,2)+Math.pow(x.y-e.y,2));if(m.forEach((n=>{const o=Math.sqrt(Math.pow(x.x-n.x,2)+Math.pow(x.y-n.y,2));o<t&&(t=o,e=n)})),t<10){return e}}return x},y=e=>{if(!e.target){return}const t=e.target.getLayer(),n=t.children.find((e=>"line-guides"===e.name()));null==n||n.destroyChildren(),t.batchDraw()};t.default.useEffect((()=>{e.current&&(e.current.anchorDragBoundFunc(p),e.current.on("dragstart",(e=>{setTimeout((()=>{if(0===n.default.DD._dragElements.size){return}const e=[...n.default.DD._dragElements.entries()],t=e.find((([e,t])=>t.node instanceof n.default.Transformer));t&&(e.splice(e.indexOf(t),1),e.unshift(t),n.default.DD._dragElements.clear(),e.forEach((([e,t])=>{n.default.DD._dragElements.set(e,t)})))}))})),e.current.on("dragmove",g),e.current.on("dragend",y),e.current.on("transformend",y),e.current.on("transform",(t=>{var n,o;t.evt.ctrlKey||t.evt.metaKey?null===(n=e.current)||void 0===n||n.rotationSnapTolerance(0):null===(o=e.current)||void 0===o||o.rotationSnapTolerance(5)})))}),[])},exports.useAnchorSnap=function(e,o,r){const a=e=>e.hasName("element")||e.hasName("line-anchor")||e.hasName("page-background")||e.hasName("elements-area"),d=t=>{const r=t.target.getLayer().children.find((e=>"line-guides"===e.name()));null==r||r.destroyChildren();var d,f=s(function(t){var n;const o=null===(n=e.current)||void 0===n?void 0:n.getStage();var i=[],r=[];return o.find(a).forEach((e=>{if(!(t.indexOf(e)>=0)){var n=e.getClientRect({skipShadow:!0,skipStroke:!0});e.hasName("line-anchor")&&(n={x:e.absolutePosition().x,y:e.absolutePosition().y,width:0,height:0}),i.push({offset:n.x,node:e,snap:"start"},{offset:n.x+n.width,node:e,snap:"end"},{offset:n.x+n.width/2,node:e,snap:"center"}),r.push({offset:n.y,node:e,snap:"start"},{offset:n.y+n.height,node:e,snap:"end"},{offset:n.y+n.height/2,node:e,snap:"center"})}})),{vertical:i,horizontal:r}}([t.target,...o.map((e=>e.current))]),{vertical:[{guide:(d=t.target).absolutePosition().x,offset:0,snap:"center",nodes:[d]}],horizontal:[{guide:d.absolutePosition().y,offset:0,snap:"center",nodes:[d]}]});if(!f.length){return}!function(t){var o;const r=null===(o=e.current)||void 0===o?void 0:o.getLayer(),s=null==r?void 0:r.children.find((e=>"line-guides"===e.name()));t.forEach((e=>{if("H"===e.orientation){var t=new n.default.Line({points:[-6e3,e.lineGuide,6e3,e.lineGuide],stroke:i.stroke,strokeWidth:i.strokeWidth,name:"guid-line",dash:i.dash});null==s||s.add(t),r.batchDraw()}else{"V"===e.orientation&&(t=new n.default.Line({points:[e.lineGuide,-6e3,e.lineGuide,6e3],stroke:i.stroke,strokeWidth:i.strokeWidth,name:"guid-line",dash:i.dash}),null==s||s.add(t))}}))}(f);const u=t.target.getAbsolutePosition(),l=Object.assign({},u);f.forEach((e=>{switch(e.snap){case"start":case"center":case"end":switch(e.orientation){case"V":l.x=e.lineGuide+e.offset;break;case"H":l.y=e.lineGuide+e.offset}}}));const c=l.x-u.x,h=l.y-u.y;if(!t.evt.ctrlKey&&!t.evt.metaKey){const e=t.target.getAbsolutePosition();t.target.absolutePosition({x:e.x+c,y:e.y+h})}},f=e=>{if(!e.target){return}const t=e.target.getLayer(),n=t.children.find((e=>"line-guides"===e.name()));null==n||n.destroyChildren(),t.batchDraw()};t.default.useEffect((()=>{e.current&&(e.current.on("dragmove",d),e.current.on("dragend",f))}),r)};const t=e(require("react")),n=e(require("konva")),o=require("../utils/math"),i={stroke:"rgb(0, 161, 255)",strokeWidth:1,dash:[4,6]};exports.setSnapGuideStyle=({stroke:e,strokeWidth:t,dash:n})=>{void 0!==e&&(i.stroke=e),void 0!==t&&(i.strokeWidth=t),void 0!==n&&(i.dash=n)};let r=({targetKonvaNodes:e,guideKonvaNode:t,distance:n,snapDirection:o})=>n<5;function s(e,t){var n=[],o=[];e.vertical.forEach((e=>{t.vertical.forEach((t=>{var o=Math.abs(e.offset-t.guide);r({targetKonvaNodes:t.nodes,guideKonvaNode:e.node,distance:o,snapDirection:e.snap})&&n.push({lineGuide:e.offset,diff:o,snap:t.snap,offset:t.offset})}))})),e.horizontal.forEach((e=>{t.horizontal.forEach((t=>{var n=Math.abs(e.offset-t.guide);r({targetKonvaNodes:t.nodes,guideKonvaNode:e.node,distance:n,snapDirection:e.snap})&&o.push({lineGuide:e.offset,diff:n,snap:t.snap,offset:t.offset})}))}));var i=[];const s=n.sort(((e,t)=>e.diff-t.diff)),a=o.sort(((e,t)=>e.diff-t.diff));var d=s[0],f=a[0];return d&&s.filter((e=>Math.abs(e.diff-d.diff)<.1)).forEach((e=>{i.push(Object.assign({orientation:"V"},e))})),f&&a.filter((e=>Math.abs(e.diff-f.diff)<.1)).forEach((e=>{i.push(Object.assign({orientation:"H"},e))})),i}function a(e,t){return e.x*t.x+e.y*t.y}exports.setSnapFilterFunc=e=>{r=e};const d={"top-left":"bottom-right","top-center":"bottom-center","top-right":"bottom-left","middle-right":"middle-left","bottom-right":"top-left","bottom-center":"top-center","bottom-left":"top-right","middle-left":"middle-right"};